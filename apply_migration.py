#!/usr/bin/env python3
"""
Script para aplicar migraci√≥n de campo correo a clientes
"""
import sqlite3
import os

def apply_migration():
    # Verificar si existe la base de datos
    db_path = 'app.db'
    if not os.path.exists(db_path):
        print('‚ùå Base de datos no encontrada. Ejecutando app para crearla...')
        return False

    # Conectar a la base de datos
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()

    try:
        # Verificar si la columna correo ya existe
        cursor.execute("PRAGMA table_info(clientes)")
        columns = [column[1] for column in cursor.fetchall()]

        if 'correo' in columns:
            print('‚úÖ La columna correo ya existe en la tabla clientes')
            return True
        else:
            # Agregar la columna correo
            cursor.execute('ALTER TABLE clientes ADD COLUMN correo VARCHAR(200)')
            
            # Crear √≠ndice (SQLite no soporta CREATE INDEX IF NOT EXISTS directamente)
            try:
                cursor.execute('CREATE INDEX idx_clientes_correo ON clientes(correo)')
                print('‚úÖ Columna correo agregada con √©xito e √≠ndice creado')
            except sqlite3.OperationalError as e:
                if 'already exists' in str(e):
                    print('‚úÖ Columna correo agregada, √≠ndice ya exist√≠a')
                else:
                    print(f'‚ö†Ô∏è Columna agregada pero error creando √≠ndice: {e}')
            
            conn.commit()
            print('üîÑ Migraci√≥n completada')
            return True
            
    except Exception as e:
        print(f'‚ùå Error en migraci√≥n: {e}')
        conn.rollback()
        return False
    finally:
        conn.close()

if __name__ == "__main__":
    apply_migration() 