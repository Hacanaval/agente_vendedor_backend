#!/usr/bin/env python3
"""
Test b√°sico del sistema de embeddings
Prueba la funcionalidad core sin inicializaci√≥n completa
"""
import asyncio
import sys
import os

# Agregar el directorio ra√≠z al path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

async def test_embeddings_basico():
    """Prueba b√°sica del sistema de embeddings"""
    print("üöÄ INICIANDO PRUEBA B√ÅSICA DE EMBEDDINGS SEM√ÅNTICOS")
    print("=" * 60)
    
    try:
        # Importar el servicio
        from app.services.embeddings_service import EmbeddingsService
        print("‚úÖ Servicio de embeddings importado correctamente")
        
        # Crear instancia del servicio
        service = EmbeddingsService()
        print("‚úÖ Instancia de servicio creada")
        
        # Verificar que el directorio de cache se crea
        print(f"üìÅ Directorio de cache: {service._ensure_cache_dir()}")
        
        # Obtener estad√≠sticas iniciales
        stats = service.get_stats()
        print("\nüìä ESTAD√çSTICAS INICIALES:")
        for key, value in stats.items():
            print(f"   {key}: {value}")
        
        print("\nüéØ PRUEBA DE GENERACI√ìN DE SIN√ìNIMOS:")
        # Probar generaci√≥n de sin√≥nimos
        from app.models.producto import Producto
        
        # Simular un producto
        class ProductoMock:
            def __init__(self, nombre, categoria, descripcion=""):
                self.nombre = nombre
                self.categoria = categoria
                self.descripcion = descripcion
        
        producto_test = ProductoMock("Extintor PQS 10 libras", "Seguridad Industrial", "Extintor de polvo qu√≠mico seco para fuegos tipo ABC")
        
        # Probar preparaci√≥n de texto
        texto_indexado = service._prepare_product_text(producto_test)
        print(f"   Producto: {producto_test.nombre}")
        print(f"   Categor√≠a: {producto_test.categoria}")
        print(f"   Texto indexado: {texto_indexado}")
        
        # Probar sin√≥nimos
        sinonimos = service._generate_synonyms(producto_test.nombre, producto_test.categoria)
        print(f"   Sin√≥nimos generados: {sinonimos}")
        
        print("\n‚úÖ PRUEBA B√ÅSICA COMPLETADA EXITOSAMENTE")
        print("üî• El sistema de embeddings est√° listo para usar")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå Error de importaci√≥n: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Error inesperado: {e}")
        return False

if __name__ == "__main__":
    try:
        result = asyncio.run(test_embeddings_basico())
        if result:
            print("\nüéâ TODAS LAS PRUEBAS B√ÅSICAS PASARON")
            sys.exit(0)
        else:
            print("\nüí• ALGUNAS PRUEBAS FALLARON")
            sys.exit(1)
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è Prueba interrumpida por el usuario")
        sys.exit(1) 